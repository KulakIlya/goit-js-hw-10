{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('.btn');\nconst timerValues = {\n  days: document.querySelector('.value[data-days]'),\n  hours: document.querySelector('.value[data-hours]'),\n  minutes: document.querySelector('.value[data-minutes]'),\n  seconds: document.querySelector('.value[data-seconds]'),\n};\n\nlet selectedDate;\n\nstartBtn.addEventListener('click', onStartClick);\n\nconst flatpickrConfig = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    if (selectedDate - Date.now() <= 0) {\n      startBtn.setAttribute('disabled', true);\n      return iziToast.error(errorToastConfig);\n    }\n\n    startBtn.removeAttribute('disabled');\n  },\n};\n\nflatpickr('#datetime-picker', flatpickrConfig);\n\nconst errorToastConfig = {\n  title: 'Error',\n  message: 'Please choose a date in the future',\n  position: 'topRight',\n  backgroundColor: '#EF4040',\n  titleColor: '#ffffff',\n  messageColor: '#ffffff',\n  iconUrl: '../img/icon-error.svg',\n};\n\nfunction updateTime() {\n  const { days, hours, minutes, seconds } = convertMs(\n    selectedDate - Date.now()\n  );\n\n  console.log(timerValues.seconds.value);\n\n  timerValues.days.textContent = days;\n  timerValues.hours.textContent = hours;\n  timerValues.minutes.textContent = minutes;\n  timerValues.seconds.textContent = seconds;\n}\n\nfunction onStartClick() {\n  const interval = setInterval(updateTime, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addingLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addingLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addingLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addingLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addingLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","timerValues","selectedDate","onStartClick","flatpickrConfig","selectedDates","iziToast","errorToastConfig","flatpickr","updateTime","days","hours","minutes","seconds","convertMs","ms","addingLeadingZero","value"],"mappings":"sGAMA,MAAMA,EAAW,SAAS,cAAc,MAAM,EACxCC,EAAc,CAClB,KAAM,SAAS,cAAc,mBAAmB,EAChD,MAAO,SAAS,cAAc,oBAAoB,EAClD,QAAS,SAAS,cAAc,sBAAsB,EACtD,QAAS,SAAS,cAAc,sBAAsB,CACxD,EAEA,IAAIC,EAEJF,EAAS,iBAAiB,QAASG,CAAY,EAE/C,MAAMC,EAAkB,CACtB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,QAAQC,EAAe,CAErB,GADAH,EAAeG,EAAc,GACzBH,EAAe,KAAK,IAAG,GAAM,EAC/B,OAAAF,EAAS,aAAa,WAAY,EAAI,EAC/BM,EAAS,MAAMC,CAAgB,EAGxCP,EAAS,gBAAgB,UAAU,CACpC,CACH,EAEAQ,EAAU,mBAAoBJ,CAAe,EAE7C,MAAMG,EAAmB,CACvB,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,QAAS,uBACX,EAEA,SAASE,GAAa,CACpB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EACxCZ,EAAe,KAAK,IAAK,CAC7B,EAEE,QAAQ,IAAID,EAAY,QAAQ,KAAK,EAErCA,EAAY,KAAK,YAAcS,EAC/BT,EAAY,MAAM,YAAcU,EAChCV,EAAY,QAAQ,YAAcW,EAClCX,EAAY,QAAQ,YAAcY,CACpC,CAEA,SAASV,GAAe,CACL,YAAYM,EAAY,GAAI,CAC/C,CAEA,SAASK,EAAUC,EAAI,CAQrB,MAAML,EAAOM,EAAkB,KAAK,MAAMD,EAAK,KAAG,CAAC,EAE7CJ,EAAQK,EAAkB,KAAK,MAAOD,EAAK,MAAO,IAAI,CAAC,EAEvDH,EAAUI,EAAkB,KAAK,MAAQD,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEpEF,EAAUG,EACd,KAAK,MAASD,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASG,EAAkBC,EAAO,CAChC,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}